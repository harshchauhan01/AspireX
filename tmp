import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './CSS/Dashboard.css';

const StuDashboard = () => {
  const [activeTab, setActiveTab] = useState('mentors');
  const [sidebarOpen, setSidebarOpen] = useState(true);
  const [searchQuery, setSearchQuery] = useState('');
  const [userInfo, setUserInfo] = useState({ name: '', email: '' });


  // Mock data
  const mentors = [
    { id: 1, name: 'Alex Johnson', expertise: 'Product Management', sessions: 24, rating: 4.8, avatar: 'A' },
    { id: 2, name: 'Maria Garcia', expertise: 'UX Design', sessions: 18, rating: 4.9, avatar: 'M' },
    { id: 3, name: 'David Kim', expertise: 'Frontend Development', sessions: 32, rating: 4.7, avatar: 'D' },
    { id: 4, name: 'Sarah Chen', expertise: 'Data Science', sessions: 15, rating: 4.6, avatar: 'S' },
  ];

  const upcomingSessions = [
    { id: 1, mentor: 'Alex Johnson', date: '2023-06-15', time: '14:00 - 15:00', topic: 'Career Growth' },
    { id: 2, mentor: 'Maria Garcia', date: '2023-06-16', time: '10:00 - 11:00', topic: 'Portfolio Review' },
  ];

  const stats = {
    totalSessions: 42,
    completedSessions: 38,
    upcomingSessions: 4,
    satisfactionRate: '92%'
  };
  useEffect(() => {
  const fetchUserInfo = async () => {
    try {
      const token = localStorage.getItem("token");
      const res = await axios.get("http://localhost:8000/api/student/profile/", {
        headers: {
          Authorization: `Token ${token}`,
        },
      });
      console.log("🎯 Received user data:", res.data);
      
      setUserInfo(res.data);
    } catch (error) {
      console.error("Failed to fetch user info:", error.response?.data || error.message);
    }
  };

  fetchUserInfo();
}, []);


  return (
    <div className={`dashboard ${sidebarOpen ? '' : 'sidebar-collapsed'}`}>
      {/* Sidebar */}
      <div className="sidebar">
        <div className="sidebar-header">
          <h2>AspireX</h2>
          <button className="toggle-sidebar" onClick={() => setSidebarOpen(!sidebarOpen)}>
            {sidebarOpen ? '◀' : '▶'}
          </button>
        </div>
        <nav>
          <ul>
            <li className="active"><span>🏠</span> {sidebarOpen && 'Dashboard'}</li>
            <li><span>👥</span> {sidebarOpen && 'Mentors'}</li>
            <li><span>🗓️</span> {sidebarOpen && 'Sessions'}</li>
            <li><span>📊</span> {sidebarOpen && 'Progress'}</li>
            <li><span>⚙️</span> {sidebarOpen && 'Settings'}</li>
          </ul>
        </nav>
        <div className="user-profile">
          <div className="avatar">U</div>
          {sidebarOpen && (
            <div className="user-info">
              <p className="username">{userInfo.name}</p>
              <p className="user-email">{userInfo.email}</p>
            </div>
          )}
        </div>
      </div>

      {/* Main Content */}
      <div className="main-content">
        <header>
          <h1>Dashboard</h1>
          <div className="search-bar">
            <input 
              type="text" 
              placeholder="Search mentors..." 
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
            <button>🔍</button>
          </div>
          <div className="notifications">🔔</div>
        </header>

        {/* Stats Cards */}
        <div className="stats-container">
          <div className="stat-card">
            <h3>Total Sessions</h3>
            <p>{stats.totalSessions}</p>
          </div>
          <div className="stat-card">
            <h3>Completed</h3>
            <p>{stats.completedSessions}</p>
          </div>
          <div className="stat-card">
            <h3>Upcoming</h3>
            <p>{stats.upcomingSessions}</p>
          </div>
          <div className="stat-card">
            <h3>Satisfaction Rate</h3>
            <p>{stats.satisfactionRate}</p>
          </div>
        </div>

        {/* Tabs */}
        <div className="tabs">
          <button 
            className={activeTab === 'mentors' ? 'active' : ''}
            onClick={() => setActiveTab('mentors')}
          >
            Top Mentors
          </button>
          <button 
            className={activeTab === 'upcoming' ? 'active' : ''}
            onClick={() => setActiveTab('upcoming')}
          >
            Upcoming Sessions
          </button>
        </div>

        {/* Tab Content */}
        <div className="tab-content">
          {activeTab === 'mentors' ? (
            <div className="mentors-grid">
              {mentors.map(mentor => (
                <div key={mentor.id} className="mentor-card">
                  <div className="mentor-avatar">{mentor.avatar}</div>
                  <h3>{mentor.name}</h3>
                  <p className="expertise">{mentor.expertise}</p>
                  <div className="mentor-stats">
                    <span>⭐ {mentor.rating}</span>
                    <span>🎯 {mentor.sessions} sessions</span>
                  </div>
                  <button className="book-button">Book Session</button>
                </div>
              ))}
            </div>
          ) : (
            <div className="sessions-list">
              {upcomingSessions.map(session => (
                <div key={session.id} className="session-item">
                  <div className="session-date">
                    <p className="day">{new Date(session.date).getDate()}</p>
                    <p className="month">{new Date(session.date).toLocaleString('default', { month: 'short' })}</p>
                  </div>
                  <div className="session-info">
                    <h3>{session.topic}</h3>
                    <p>With {session.mentor}</p>
                  </div>
                  <div className="session-time">
                    <p>{session.time}</p>
                    <button className="join-button">Join</button>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default StuDashboard;